{"version":3,"file":"component---src-templates-blog-post-details-js-5bbdbb6cc24c072ecb70.js","mappings":"4KAmBA,MAJeA,IAAmB,IAAlB,SAAEC,GAAUD,EAC1B,OAAOE,EAAAA,cAAA,cAASD,EAAkB,E,UC4DpC,MAxEsBE,KACpB,MAAM,EAACC,EAAW,EAACC,IAAiBC,EAAAA,EAAAA,WAAS,GAMvCC,EAAqBA,KACzBF,GAAc,EAAM,EA2BtB,OAxBAG,EAAAA,EAAAA,YAAU,KAER,MAAMC,EAAeA,KACfC,OAAOC,YAAc,KACvBN,GAAc,EAChB,EAOF,OAHAK,OAAOE,iBAAiB,SAAUH,GAG3B,KACLC,OAAOG,oBAAoB,SAAUJ,EAAa,CACnD,GACA,KAEHD,EAAAA,EAAAA,YAAU,MAEHJ,GAAcM,OAAOC,WAAa,KACrCN,GAAc,EAChB,GACC,CAACD,IAGFF,EAAAA,cAAA,OAAKY,UAAU,iBACbZ,EAAAA,cAAA,OAAKY,UAAU,oBACbZ,EAAAA,cAAA,OAAKY,UAAU,iBACbZ,EAAAA,cAAA,OAAKY,UAAU,QACbZ,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAG,KAAI,OAEfd,EAAAA,cAAA,OACEY,UAAY,gBAAcV,EAAa,SAAW,IAClDa,QAzCgBC,KACxBb,GAAeD,EAAW,GA0ClBF,EAAAA,cAAA,OAAKY,UAAU,QACfZ,EAAAA,cAAA,OAAKY,UAAU,QACfZ,EAAAA,cAAA,OAAKY,UAAU,SAEjBZ,EAAAA,cAAA,WACEA,EAAAA,cAAA,MAAIY,UAAY,aAAWV,EAAa,SAAW,KACjDF,EAAAA,cAAA,MAAIe,QAASV,GACXL,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAG,KAAI,SAEfd,EAAAA,cAAA,MAAIe,QAASV,GACXL,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAG,UAAS,UAEpBd,EAAAA,cAAA,MAAIe,QAASV,GACXL,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAG,aAAY,aAEvBd,EAAAA,cAAA,MAAIe,QAASV,GACXL,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAG,SAAQ,aAMvB,EC9CV,MAvBeG,KACb,MAAMC,GAAOC,EAAAA,EAAAA,gBAAe,eAWtB,UAAEC,GAAcF,EAAKG,KAAKC,aAEhC,OADAC,QAAQC,IAAIJ,GAGVpB,EAAAA,cAAA,cACEA,EAAAA,cAAA,SAAIoB,GAEN,ECAJ,MAZetB,IAAmB,IAAlB,SAAEC,GAAUD,EAC1B,OACEE,EAAAA,cAAA,OAAKY,UAAU,UACbZ,EAAAA,cAACyB,EAAM,KACLzB,EAAAA,cAACC,EAAa,OAEhBD,EAAAA,cAAA,OAAKY,UAAU,WAAWb,GAC1BC,EAAAA,cAACiB,EAAM,MACH,C,6IChBCS,EAAU,2CCwBrB,MApBwB5B,IAAe,IAAd,KAAEoB,GAAMpB,EAC/ByB,QAAQC,IAAIN,GACZ,MAAMS,EAAOT,EAAKU,gBACZ,KAAEC,GAASF,EACjB,OACE3B,EAAAA,cAAC8B,EAAAA,EAAM,KACL9B,EAAAA,cAAA,OAAKY,UAAWmB,GACd/B,EAAAA,cAAA,UAAK2B,EAAKK,YAAYC,OACtBjC,EAAAA,cAAA,UACG2B,EAAKK,YAAYE,KAAK,MAAIP,EAAKK,YAAYG,QAE9CnC,EAAAA,cAAA,OACEY,UAAWmB,EAAAA,KAAcF,EACzBO,wBAAyB,CAAEC,OAAQV,EAAKE,SAGrC,C","sources":["webpack://itsmitroy.github.io/./src/component/Layout/Header/index.jsx","webpack://itsmitroy.github.io/./src/component/Layout/NavigationBar/index.jsx","webpack://itsmitroy.github.io/./src/component/Layout/Footer.js","webpack://itsmitroy.github.io/./src/component/Layout.js","webpack://itsmitroy.github.io/./src/styles/blog-post-details.module.css","webpack://itsmitroy.github.io/./src/templates/blog-post-details.js"],"sourcesContent":["import React from \"react\";\r\nimport \"./header.module.css\";\r\n\r\n// const headerStyle = {\r\n//   \"@media (min-width: 768px)\": {\r\n//     background: \"lightblue\",\r\n//   },\r\n//   position: \"sticky\",\r\n//   top: \"0\",\r\n//   background: \"pink\",\r\n//   padding: \".5em 0\",\r\n//   textAlign: \"center\",\r\n//   marginBottom: \"2em\",\r\n// };\r\n\r\nconst Header = ({ children }) => {\r\n  return <header>{children}</header>;\r\n};\r\n\r\nexport default Header;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport \"./navigationbar.css\";\r\nimport { Link } from \"gatsby\";\r\n\r\nconst NavigationBar = () => {\r\n  const [isMenuOpen, setIsMenuOpen] = useState(false);\r\n\r\n  const handleToggleClick = () => {\r\n    setIsMenuOpen(!isMenuOpen);\r\n  };\r\n\r\n  const handleNavLinkClick = () => {\r\n    setIsMenuOpen(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Add event listener to handle window resize\r\n    const handleResize = () => {\r\n      if (window.innerWidth >= 768) {\r\n        setIsMenuOpen(false);\r\n      }\r\n    };\r\n\r\n    // Attach the event listener\r\n    window.addEventListener(\"resize\", handleResize);\r\n\r\n    // Clean up the event listener when the component unmounts\r\n    return () => {\r\n      window.removeEventListener(\"resize\", handleResize);\r\n    };\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    // Close mobile menu when the toggle state changes\r\n    if (!isMenuOpen && window.innerWidth < 768) {\r\n      setIsMenuOpen(false);\r\n    }\r\n  }, [isMenuOpen]);\r\n\r\n  return (\r\n    <div className='header-sticky'>\r\n      <div className='common-container'>\r\n        <div className='nav-container'>\r\n          <div className='logo'>\r\n            <Link to='/'>MR</Link>\r\n          </div>\r\n          <div\r\n            className={`menu-toggle ${isMenuOpen ? \"active\" : \"\"}`}\r\n            onClick={handleToggleClick}\r\n          >\r\n            <div className='bar'></div>\r\n            <div className='bar'></div>\r\n            <div className='bar'></div>\r\n          </div>\r\n          <nav>\r\n            <ul className={`nav-menu ${isMenuOpen ? \"active\" : \"\"}`}>\r\n              <li onClick={handleNavLinkClick}>\r\n                <Link to='/'>Home</Link>\r\n              </li>\r\n              <li onClick={handleNavLinkClick}>\r\n                <Link to='/about'>About</Link>\r\n              </li>\r\n              <li onClick={handleNavLinkClick}>\r\n                <Link to='/research'>Research</Link>\r\n              </li>\r\n              <li onClick={handleNavLinkClick}>\r\n                <Link to='/blog'>Blog</Link>\r\n              </li>\r\n            </ul>\r\n          </nav>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default NavigationBar;\r\n","import React from \"react\";\r\nimport { Link, graphql, useStaticQuery } from \"gatsby\";\r\n\r\nconst Footer = () => {\r\n  const data = useStaticQuery(graphql`\r\n    query WebSiteInfoF {\r\n      site {\r\n        siteMetadata {\r\n          description\r\n          title\r\n          copywrite\r\n        }\r\n      }\r\n    }\r\n  `);\r\n  const { copywrite } = data.site.siteMetadata;\r\n  console.log(copywrite);\r\n  return (\r\n    // <BrowserRouter>\r\n    <footer>\r\n      <p>{copywrite}</p>\r\n    </footer>\r\n    // </BrowserRouter>\r\n  );\r\n};\r\n\r\nexport default Footer;\r\n","import React from \"react\";\r\n// import ToggleMenuMFTest from \"./Old/ToggleMenuMobileFirst\";\r\nimport \"../styles/global.css\";\r\n// import ToggleMenuMobileFirstComplete from \"./Old/NavigationBar\";\r\n// import Navbar from \"./Layout/Navbar\";\r\n// import Wrapper from \"./Common/Wrapper\";\r\nimport Header from \"./Layout/Header\";\r\nimport NavigationBar from \"./Layout/NavigationBar\";\r\nimport Footer from \"./Layout/Footer\";\r\n\r\nconst Layout = ({ children }) => {\r\n  return (\r\n    <div className='layout'>\r\n      <Header>\r\n        <NavigationBar></NavigationBar>\r\n      </Header>\r\n      <div className='content'>{children}</div>\r\n      <Footer></Footer>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Layout;\r\n","// extracted by mini-css-extract-plugin\nexport var blogHtml = \"blog-post-details-module--blog-html--e9f80\";\nexport var details = \"blog-post-details-module--details--3dc19\";\nexport var gatsbyRemarkAutolink = \"blog-post-details-module--gatsby-remark-autolink--323a9\";\nexport var html = \"blog-post-details-module--html--9627e\";","import React from \"react\";\r\nimport Layout from \"../component/Layout\";\r\nimport * as styles from \"../styles/blog-post-details.module.css\";\r\nimport \"../styles/blog-post-details.module.css\";\r\nimport { graphql } from \"gatsby\";\r\n\r\nconst BlogPostDetails = ({ data }) => {\r\n  console.log(data);\r\n  const post = data.markdownRemark;\r\n  const { html } = post;\r\n  return (\r\n    <Layout>\r\n      <div className={styles.details}>\r\n        <h2>{post.frontmatter.title}</h2>\r\n        <h3>\r\n          {post.frontmatter.date} | {post.frontmatter.author}\r\n        </h3>\r\n        <div\r\n          className={styles.blog - html}\r\n          dangerouslySetInnerHTML={{ __html: post.html }}\r\n        ></div>\r\n      </div>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default BlogPostDetails;\r\n\r\nexport const query = graphql`\r\n  query BlogPost($qString: String) {\r\n    markdownRemark(id: { eq: $qString }) {\r\n      id\r\n      frontmatter {\r\n        author\r\n        date(formatString: \"MMMM DD, YYYY\", locale: \"en\")\r\n        slug\r\n        tags\r\n        title\r\n      }\r\n      timeToRead\r\n      html\r\n      tableOfContents(heading: \"\", pathToSlugField: \"\")\r\n    }\r\n  }\r\n`;\r\n"],"names":["_ref","children","React","NavigationBar","isMenuOpen","setIsMenuOpen","useState","handleNavLinkClick","useEffect","handleResize","window","innerWidth","addEventListener","removeEventListener","className","Link","to","onClick","handleToggleClick","Footer","data","useStaticQuery","copywrite","site","siteMetadata","console","log","Header","details","post","markdownRemark","html","Layout","styles","frontmatter","title","date","author","dangerouslySetInnerHTML","__html"],"sourceRoot":""}